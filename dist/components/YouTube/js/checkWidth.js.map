{"version":3,"sources":["../../../../src/components/YouTube/js/checkWidth.js"],"names":["checkWidth","entries","forEach","entry","width","parseInt","target","offsetWidth","dataset","ratio","id","iframe","document","getElementById","setAttribute","parseFloat"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;AAeA,IAAMA,UAAU,GAAG,SAAbA,UAAa,CAAAC,OAAO,EAAI;AAC7BA,EAAAA,OAAO,CAACC,OAAR,CAAgB,UAAAC,KAAK,EAAI;AACxB;AACA,QAAMC,KAAK,GAAGC,QAAQ,CAACF,KAAK,CAACG,MAAN,CAAaC,WAAd,EAA2B,EAA3B,CAAtB,CAFwB,CAGxB;;AAHwB,gCAIFJ,KAAK,CAACG,MAAN,CAAaE,OAJX;AAAA,QAIhBC,KAJgB,yBAIhBA,KAJgB;AAAA,QAITC,EAJS,yBAITA,EAJS,EAKxB;;AACA,QAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwBH,EAAxB,CAAf,CANwB,CAOxB;;AACA,QAAIC,MAAJ,EAAY;AACXA,MAAAA,MAAM,CAACG,YAAP,CAAoB,OAApB,EAA6BV,KAA7B;AACAO,MAAAA,MAAM,CAACG,YAAP,CACC,QADD,EAECT,QAAQ,CAACD,KAAK,GAAGW,UAAU,CAACN,KAAD,CAAnB,EAA4B,EAA5B,CAFT;AAIA;AACD,GAfD;AAgBA,CAjBD;;eAmBeT,U","sourcesContent":["/**\n * ## checkWidth\n *\n * Each entry should have a `data-id` attribute that\n * matches the id of a generated YouTube iframe.\n *\n * 1. Get the width of the element\n * 2. Get the radio and id from the data attributes\n * 3. Find the iframe with the matching id. If the id is undefined\n * the iframe will be null.\n * 4. If the iframe is found, set its width and height based on the width\n * and ratio of the container.\n *\n * @param {*} entries Array of dom elements\n */\nconst checkWidth = entries => {\n\tentries.forEach(entry => {\n\t\t// 1.\n\t\tconst width = parseInt(entry.target.offsetWidth, 10)\n\t\t// 2.\n\t\tconst { ratio, id } = entry.target.dataset\n\t\t// 3.\n\t\tconst iframe = document.getElementById(id)\n\t\t// 4.\n\t\tif (iframe) {\n\t\t\tiframe.setAttribute(\"width\", width)\n\t\t\tiframe.setAttribute(\n\t\t\t\t\"height\",\n\t\t\t\tparseInt(width * parseFloat(ratio), 10)\n\t\t\t)\n\t\t}\n\t})\n}\n\nexport default checkWidth\n"],"file":"checkWidth.js"}