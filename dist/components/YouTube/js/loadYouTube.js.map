{"version":3,"sources":["../../../../src/components/YouTube/js/loadYouTube.js"],"names":["loadYouTube","players","observer","window","ResizeObserver","checkWidth","tag","document","createElement","src","getElementsByTagName","firstScriptTag","parentNode","insertBefore","videosAsObjects","Array","from","getElementsByClassName","video","dataset","container","onYouTubeIframeAPIReady","youtubePlayers","map","elem","width","parseInt","offsetWidth","player","videoId","id","ratio","push","forEach","thisVideo","observe"],"mappings":";;;;;;;AAAA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA;;;;;;;;;;;;;;;AAeA,IAAMA,WAAW,GAAG,SAAdA,WAAc,GAAM;AACzB;AACA,MAAMC,OAAO,GAAG,EAAhB,CAFyB,CAGzB;;AACA,MAAMC,QAAQ,GACb,oBAAoBC,MAApB,GACG,IAAIC,cAAJ,CAAmBC,mBAAnB,CADH,GAEG,IAHJ,CAJyB,CAQzB;;AACA,MAAMC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAZ;AACAF,EAAAA,GAAG,CAACG,GAAJ,GAAU,oCAAV;;AAVyB,8BAWAF,QAAQ,CAACG,oBAAT,CAA8B,QAA9B,CAXA;AAAA;AAAA,MAWlBC,cAXkB;;AAYzBA,EAAAA,cAAc,CAACC,UAAf,CAA0BC,YAA1B,CAAuCP,GAAvC,EAA4CK,cAA5C,EAZyB,CAczB;;AACA,MAAMG,eAAe,GAAGC,KAAK,CAACC,IAAN,CACvBT,QAAQ,CAACU,sBAAT,CAAgC,iBAAhC,CADuB,EAEvB,UAAAC,KAAK;AAAA,6BACDA,KAAK,CAACC,OADL;AAEJC,MAAAA,SAAS,EAAEF;AAFP;AAAA,GAFkB,CAAxB,CAfyB,CAuBzB;;AACAf,EAAAA,MAAM,CAACkB,uBAAP,GAAiC,YAAM;AACtC,QAAMC,cAAc,GAAGR,eAAe,CAACS,GAAhB,CAAoB,UAAAC,IAAI,EAAI;AAClD,UAAMC,KAAK,GAAGC,QAAQ,CAACF,IAAI,CAACJ,SAAL,CAAeO,WAAhB,EAA6B,EAA7B,CAAtB;AACA,UAAMC,MAAM,GAAG,yBAAW;AACzBC,QAAAA,OAAO,EAAEL,IAAI,CAACK,OADW;AAEzBC,QAAAA,EAAE,EAAEN,IAAI,CAACM,EAFgB;AAGzBC,QAAAA,KAAK,EAAEP,IAAI,CAACO,KAHa;AAIzBN,QAAAA,KAAK,EAALA;AAJyB,OAAX,CAAf;AAOA,aAAOG,MAAP;AACA,KAVsB,CAAvB;AAYA3B,IAAAA,OAAO,CAAC+B,IAAR,OAAA/B,OAAO,qBAASqB,cAAT,EAAP;AACA,GAdD,CAxByB,CAwCzB;;;AACAR,EAAAA,eAAe,CAACmB,OAAhB,CAAwB,UAAAC,SAAS,EAAI;AACpC,QAAIhC,QAAJ,EAAcA,QAAQ,CAACiC,OAAT,CAAiBD,SAAS,CAACd,SAA3B;AACd,GAFD;AAGA,CA5CD;;eA8CepB,W","sourcesContent":["import makePlayer from \"./makePlayer\"\nimport checkWidth from \"./checkWidth\"\n\n/**\n * ## loadYouTube\n *\n * 1. Create an array to keep track of all the youtube players on page\n * 2. Create the ResizeObserver and add pass in the `checkWidth` function\n * 3. Load the IFrame Player API code asynchronously.\n * 4. Get each of the videos on page and add them to the `videosAsObjects` array\n * as an object containing their dataset attributes\n * 5. This function runs only once, it is called by the youtube iframe\n * api once it is loaded. Create a youtube player for each video in the `videosAsObjects`\n * array and push them into the `players` array.\n * 6. Observe each of the video's containers. When the contanier's size changes this should\n * trigger `checkWidth` to update the size of the video's iframe.\n *\n */\nconst loadYouTube = () => {\n\t// 1.\n\tconst players = []\n\t// 2.\n\tconst observer =\n\t\t\"ResizeObserver\" in window\n\t\t\t? new ResizeObserver(checkWidth)\n\t\t\t: null\n\t// 3.\n\tconst tag = document.createElement(\"script\")\n\ttag.src = \"https://www.youtube.com/iframe_api\"\n\tconst [firstScriptTag] = document.getElementsByTagName(\"script\")\n\tfirstScriptTag.parentNode.insertBefore(tag, firstScriptTag)\n\n\t// 4.\n\tconst videosAsObjects = Array.from(\n\t\tdocument.getElementsByClassName(\"js-load-youtube\"),\n\t\tvideo => ({\n\t\t\t...video.dataset,\n\t\t\tcontainer: video,\n\t\t})\n\t)\n\n\t// 5.\n\twindow.onYouTubeIframeAPIReady = () => {\n\t\tconst youtubePlayers = videosAsObjects.map(elem => {\n\t\t\tconst width = parseInt(elem.container.offsetWidth, 10)\n\t\t\tconst player = makePlayer({\n\t\t\t\tvideoId: elem.videoId,\n\t\t\t\tid: elem.id,\n\t\t\t\tratio: elem.ratio,\n\t\t\t\twidth,\n\t\t\t})\n\n\t\t\treturn player\n\t\t})\n\n\t\tplayers.push(...youtubePlayers)\n\t}\n\n\t// 6.\n\tvideosAsObjects.forEach(thisVideo => {\n\t\tif (observer) observer.observe(thisVideo.container)\n\t})\n}\n\nexport default loadYouTube\n"],"file":"loadYouTube.js"}