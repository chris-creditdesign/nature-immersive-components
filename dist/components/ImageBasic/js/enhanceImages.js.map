{"version":3,"sources":["../../../../src/components/ImageBasic/js/enhanceImages.js"],"names":["enhanceImages","fig","img","querySelector","classList","contains","src","includes","URL","replace","setAttribute","add"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;AAaA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,GAAG,EAAI;AAC5B,MAAMC,GAAG,GAAGD,GAAG,CAACE,aAAJ,CAAkB,KAAlB,CAAZ,CAD4B,CAE5B;;AACA,MAAIF,GAAG,CAACG,SAAJ,CAAcC,QAAd,CAAuB,WAAvB,CAAJ,EAAyC,OAHb,CAI5B;;AACA,MAAI,CAACH,GAAG,CAACI,GAAJ,CAAQC,QAAR,CAAiB,QAAjB,CAAL,EAAiC,OALL,CAO5B;;AACA,MAAMC,GAAG,GAAGN,GAAG,CAACI,GAAJ,CAAQG,OAAR,CAAgB,QAAhB,EAA0B,EAA1B,CAAZ;AACAP,EAAAA,GAAG,CAACQ,YAAJ,CAAiB,KAAjB,EAAwBF,GAAxB,EAT4B,CAW5B;;AACAN,EAAAA,GAAG,CAACE,SAAJ,CAAcO,GAAd,CAAkB,WAAlB;AACA,CAbD;;eAeeX,a","sourcesContent":["/**\n * ## enhanceImages\n *\n * Add high res-image URL, srcset and an adjacent `source` element\n * to display high-res image.\n *\n * 1. Stop is image has already been 'enhanced'.\n * 2. Stop if the src URL does not contain '-small'.\n * 3. Create the normal URL and add it to the image\n * 4. Add the `js-loaded` class so that img cannot be 'enhanced' again.\n *\n * @param {*} img The `img` element to be enhanced\n */\nconst enhanceImages = fig => {\n\tconst img = fig.querySelector(\"img\")\n\t// 1.\n\tif (fig.classList.contains(\"js-loaded\")) return\n\t// 2.\n\tif (!img.src.includes(\"-small\")) return\n\n\t// 3.\n\tconst URL = img.src.replace(/-small/, \"\")\n\timg.setAttribute(\"src\", URL)\n\n\t// 4.\n\timg.classList.add(\"js-loaded\")\n}\n\nexport default enhanceImages\n"],"file":"enhanceImages.js"}