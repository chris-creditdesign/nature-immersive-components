{"version":3,"sources":["../../../../src/components/CoverBackgroundVideo/js/autoPlayVideo.js"],"names":["autoPlayFullScreenVideo","video","promise","play","undefined","then","catch","error","Error"],"mappings":";;;;;;;AAAA;;;;;;;;AASA,IAAMA,uBAAuB,GAAG,SAA1BA,uBAA0B,CAAAC,KAAK,EAAI;AACxC,MAAMC,OAAO,GAAGD,KAAK,CAACE,IAAN,EAAhB;;AACA,MAAID,OAAO,KAAKE,SAAhB,EAA2B;AAC1BF,IAAAA,OAAO,CAACG,IAAR,CAAa,YAAM,CAClB;AACA,KAFD,EAEGC,KAFH,CAES,UAAAC,KAAK,EAAI;AACjB;AACAC,MAAAA,KAAK,CAACD,KAAD,EAAQ,wBAAR,CAAL;AACA,KALD;AAMA;AACD,CAVD;;eAYeP,uB","sourcesContent":["/**\n * ## autoPlayFullScreenVideo\n *\n * Attempt to play the full screen video element.\n * Catch an error if this is not possible\n *\n * @param {object} video The video element to play\n */\n\nconst autoPlayFullScreenVideo = video => {\n\tconst promise = video.play()\n\tif (promise !== undefined) {\n\t\tpromise.then(() => {\n\t\t\t// Auto play started\n\t\t}).catch(error => {\n\t\t\t// Autoplay was prevented\n\t\t\tError(error, \"Autoplay was prevented\")\n\t\t})\n\t}\n}\n\nexport default autoPlayFullScreenVideo\n"],"file":"autoPlayVideo.js"}