{"version":3,"sources":["../../../../src/components/CoverBackgroundVideo/js/lazyLoadCoverBackgroundVideo.js"],"names":["enhanceVideos","elem","classList","contains","img","querySelector","btn","source","src","replace","slice","alt","video","replaceChild","updateButtonStatus","innerText","paused","addEventListener","add","intersectionCallback","entries","forEach","entry","isIntersecting","target","lazyLoadCoverBackgroundVideo","root","rootMargin","videos","document","getElementsByClassName","videosArray","Array","from","window","observers","observerOptions","index","IntersectionObserver","observe","image"],"mappings":"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","sourcesContent":["import createVideo from \"./createVideo\"\nimport autoPlayVideo from \"./autoPlayVideo\"\n\n/**\n * ## enhanceImages\n *\n * Add high res-image URL, srcset and an adjacent `source` element\n * to display high-res image.\n *\n * 1. Stop is image has already been 'enhanced'.\n * 2. Stop if the src URL does not contain '-small'.\n * 3. Create the normal URL and add it to the image\n * 4. Add the `js-loaded` class so that img cannot be 'enhanced' again.\n *\n * @param {*} img The `img` element to be enhanced\n */\nconst enhanceVideos = elem => {\n\t// 1.\n\tif (elem.classList.contains(\"js-loaded\")) return\n\tconst img = elem.querySelector(\"img\")\n\tconst btn = elem.querySelector(\"button\")\n\n\t// Get the source url but remove the img extension ie .png or .jpg\n\tconst source = img.src.replace(/-small/, \"\").slice(0, -4)\n\tconst { alt } = img\n\n\tconst video = createVideo(source, alt)\n\n\t// Add the new video element to the page - replacing the figure\n\telem.replaceChild(video, img)\n\n\t// Attempt to auto play the video\n\tautoPlayVideo(video)\n\n\t/**\n\t * Update the button to show 'play' or 'pause' with the\n\t * associated icon.\n\t */\n\tconst updateButtonStatus = () => {\n\t\tbtn.innerText = video.paused ? \"Play video\" : \"Pause video\"\n\t}\n\n\t// Add an event listener so the video can be played or paused\n\t// by clicking on the button\n\tbtn.addEventListener(\"click\", () => {\n\t\t// If the video.paused is true call the play method and visa-versa\n\t\tvideo[video.paused ? \"play\" : \"pause\"]()\n\t\tupdateButtonStatus()\n\t})\n\n\tupdateButtonStatus()\n\n\t// 4.\n\telem.classList.add(\"js-loaded\")\n}\n\n/**\n * ## intersectionCallback\n *\n * When the images enter the screen, call `enhanceImages` on each of them.\n *\n * 1. Only call `enchanceImages` if the entry is on screen AND the class\n *    `js-loaded` is not present.\n * @param {array} entries Array of dom elements\n */\nconst intersectionCallback = entries => {\n\tentries.forEach(entry => {\n\t\t// 1.\n\t\tif (\n\t\t\tentry.isIntersecting &&\n\t\t\t!entry.target.classList.contains(\"js-loaded\")\n\t\t) {\n\t\t\tenhanceVideos(entry.target)\n\t\t}\n\t})\n}\n\n/**\n * ## lazyloadImages\n *\n * Call `enhanceImages` for each `img[loading=\"lazy\"]` on the page.\n *\n * 1. The images can natively lazyload, so no need for the IntersectionObserver.\n * Call `enhanceImages` straight away.\n * 2. Use IntersectionObserver to load the images when they move into the viewport.\n * 3. The viewport is the root by default.\n * 4. Start loading the image when it is 600px above or below the viewport\n * 5. No lazy loading options are available so pop all the high res images onto the page.\n * @param {*} root\n * @param {*} rootMargin\n */\nconst lazyLoadCoverBackgroundVideo = (\n\troot = null,\n\trootMargin = \"600px 0px 600px 0px\"\n) => {\n\tconst videos = document.getElementsByClassName(\n\t\t\"js-lazyload-cover-background-video\"\n\t)\n\tconst videosArray = Array.from(videos)\n\n\tif (\"IntersectionObserver\" in window) {\n\t\t// 2.\n\t\tconst observers = []\n\n\t\tconst observerOptions = {\n\t\t\troot, // 3.\n\t\t\trootMargin, // 4.\n\t\t}\n\n\t\tvideosArray.forEach((video, index) => {\n\t\t\tobservers[index] = new IntersectionObserver(\n\t\t\t\tintersectionCallback,\n\t\t\t\tobserverOptions\n\t\t\t)\n\t\t\tobservers[index].observe(video)\n\t\t})\n\t} else {\n\t\t// 5.\n\t\tvideosArray.forEach(image => enhanceVideos(image))\n\t}\n}\n\nexport default lazyLoadCoverBackgroundVideo\n"],"file":"lazyLoadCoverBackgroundVideo.js"}