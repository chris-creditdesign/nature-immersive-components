{"version":3,"sources":["../../../src/components/js/createIntersectionObserver.js"],"names":["createIntersectionObserver","classNameToObserve","enhanceFunc","root","rootMargin","threshold","intersectionCallback","entries","forEach","entry","isIntersecting","target","classList","contains","elems","document","getElementsByClassName","elemsArray","Array","from","window","observers","observerOptions","image","index","IntersectionObserver","observe","elem"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;AAgBA,IAAMA,0BAA0B,GAAG,SAA7BA,0BAA6B,CAClCC,kBADkC,EAElCC,WAFkC,EAM9B;AAAA,MAHJC,IAGI,uEAHG,IAGH;AAAA,MAFJC,UAEI,uEAFS,qBAET;AAAA,MADJC,SACI,uEADQ,GACR;;AACJ;;;;;;;;;AASA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAC,OAAO,EAAI;AACvCA,IAAAA,OAAO,CAACC,OAAR,CAAgB,UAAAC,KAAK,EAAI;AACxB;AACA,UACCA,KAAK,CAACC,cAAN,IACA,CAACD,KAAK,CAACE,MAAN,CAAaC,SAAb,CAAuBC,QAAvB,CAAgC,WAAhC,CAFF,EAGE;AACDX,QAAAA,WAAW,CAACO,KAAK,CAACE,MAAP,CAAX;AACA;AACD,KARD;AASA,GAVD;;AAYA,MAAMG,KAAK,GAAGC,QAAQ,CAACC,sBAAT,CAAgCf,kBAAhC,CAAd;AACA,MAAMgB,UAAU,GAAGC,KAAK,CAACC,IAAN,CAAWL,KAAX,CAAnB;;AAEA,MAAI,0BAA0BM,MAA9B,EAAsC;AACrC;AACA,QAAMC,SAAS,GAAG,EAAlB;AAEA,QAAMC,eAAe,GAAG;AACvBnB,MAAAA,IAAI,EAAJA,IADuB;AACjB;AACNC,MAAAA,UAAU,EAAVA,UAFuB;AAEX;AACZC,MAAAA,SAAS,EAATA;AAHuB,KAAxB;AAMAY,IAAAA,UAAU,CAACT,OAAX,CAAmB,UAACe,KAAD,EAAQC,KAAR,EAAkB;AACpCH,MAAAA,SAAS,CAACG,KAAD,CAAT,GAAmB,IAAIC,oBAAJ,CAClBnB,oBADkB,EAElBgB,eAFkB,CAAnB;AAIAD,MAAAA,SAAS,CAACG,KAAD,CAAT,CAAiBE,OAAjB,CAAyBH,KAAzB;AACA,KAND;AAOA,GAjBD,MAiBO;AACN;AACAN,IAAAA,UAAU,CAACT,OAAX,CAAmB,UAAAmB,IAAI;AAAA,aAAIzB,WAAW,CAACyB,IAAD,CAAf;AAAA,KAAvB;AACA;AACD,CApDD;;eAsDe3B,0B","sourcesContent":["/**\n * ## createIntersectionObserver\n *\n * 1. Use IntersectionObserver to call `enhanceFunc` for elem with the class\n * `classNameToObserve` on the page.\n * 3. The viewport is the root by default.\n * 4. Start loading the video when it is 600px above or below the viewport\n * 5. Intersection observer is not available, so call `enhanceFunc` immediately\n *\n * @param {*} classNameToObserve\n * @param {*} enhanceFunc\n * @param {*} root\n * @param {*} rootMargin\n * @param {*} threshold\n */\n\nconst createIntersectionObserver = (\n\tclassNameToObserve,\n\tenhanceFunc,\n\troot = null,\n\trootMargin = \"600px 0px 600px 0px\",\n\tthreshold = 1.0\n) => {\n\t/**\n\t * ## intersectionCallback\n\t *\n\t * When the observed elements enter the screen, call `enhanceVideos` on each of them.\n\t *\n\t * 1. Only call `enchanceVideos` if the entry is on screen AND the class `js-loaded` is not present.\n\t *\n\t * @param {array} entries Array of dom elements\n\t */\n\tconst intersectionCallback = entries => {\n\t\tentries.forEach(entry => {\n\t\t\t// 1.\n\t\t\tif (\n\t\t\t\tentry.isIntersecting &&\n\t\t\t\t!entry.target.classList.contains(\"js-loaded\")\n\t\t\t) {\n\t\t\t\tenhanceFunc(entry.target)\n\t\t\t}\n\t\t})\n\t}\n\n\tconst elems = document.getElementsByClassName(classNameToObserve)\n\tconst elemsArray = Array.from(elems)\n\n\tif (\"IntersectionObserver\" in window) {\n\t\t// 2.\n\t\tconst observers = []\n\n\t\tconst observerOptions = {\n\t\t\troot, // 3.\n\t\t\trootMargin, // 4.\n\t\t\tthreshold,\n\t\t}\n\n\t\telemsArray.forEach((image, index) => {\n\t\t\tobservers[index] = new IntersectionObserver(\n\t\t\t\tintersectionCallback,\n\t\t\t\tobserverOptions\n\t\t\t)\n\t\t\tobservers[index].observe(image)\n\t\t})\n\t} else {\n\t\t// 5.\n\t\telemsArray.forEach(elem => enhanceFunc(elem))\n\t}\n}\n\nexport default createIntersectionObserver\n"],"file":"createIntersectionObserver.js"}